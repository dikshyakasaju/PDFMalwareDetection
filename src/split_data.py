import argparse
import pandas as pd
from sklearn.model_selection import train_test_split
from get_data import GetData
from logger import AppLogger



class SplitData:
    """
    This class will split the data into train and validation set
    """

    def __init__(self):
        self.file = open("Logs/GeneralLog.txt", "a")
        self.logger = AppLogger()
        self.get_data = GetData()

    def split_and_save_data(self, config_path):
        """
        This method will split the data into train and validation set and save the file to the processed data location
        """
        try:
            config = self.get_data.read_params(config_path)
            processed_data_path = config["feature_selection"]["preprocessed_dataset_path"]
            train_data_path = config["split_data"]["train_path"]
            test_data_path = config["split_data"]["test_path"]
            test_size = config["split_data"]["test_size"]
            random_state = config["base"]["random_state"]
            # Reading the preprocessed csv file
            df = pd.read_csv(processed_data_path, sep=",")
            self.logger.log(self.file, "Successfully loaded the .csv file")
            #Performing a train test split
            train, test = train_test_split(df, random_state=random_state, test_size=test_size)
            self.logger.log(self.file, "Train and test split successful")
            train.to_csv(train_data_path, sep=',', index=False, encoding="utf-8")
            test.to_csv(test_data_path, sep=',', index=False, encoding="utf-8")
            self.logger.log(self.file, f"Successfully saved the file to {train_data_path} {test_data_path}")
            self.file.close()

        except Exception as e:
            self.logger.log(self.file, f"Error occurred: {e}")
            self.file.close()
            raise e





if __name__ == "__main__":
    args = argparse.ArgumentParser()
    args.add_argument("--config", default="params.yaml")
    parse_args = args.parse_args()
    split = SplitData()
    split.split_and_save_data(config_path=parse_args.config)

