from get_data import GetData
import argparse
import mlflow
from mlflow.tracking import MlflowClient
from pprint import pprint
import joblib
import os
from logger import AppLogger

class ProductionModel:
    """
    This class shall be used to keep logs of model and productionize it.
    """
    def __init__(self):
        self.logger = AppLogger()
        self.get_data = GetData()



    def log_production_model(self, config_path):
        config = self.get_data.read_params(config_path)
        mlflow_config = config["mlflow_config"]
        mlflow_config["registered_model_name"]








if __name__ == "__main__":
    args = argparse.ArgumentParser()
    args.add_argument("--config", default="params.yaml")
    parsed_args = args.parse_args()
    log_model = ProductionModel()
    log_model.log_production_model(config_path=parsed_args.config)