## Read params
## Process
## Return dataframe


import os
import yaml
import pandas as pd
import argparse
from logger import AppLogger


class GetData:
    """
    This class is used to obtain and read data the source location.
    """

    def __init__(self):
        self.logger = AppLogger()


    def read_params(self, config_path):
        """
        This method is used to read the params.yaml file
        :param: config_path
        :return: params.yaml file
        """
        try:
            with open(config_path, "r") as yaml_file:
                config = yaml.safe_load(yaml_file)
                file = open("Logs/GeneralLog.txt", "a")
                self.logger.log(file, "Successfully loaded the parameters")
                file.close()
            return config


        except Exception as e:
            file = open("Logs/GeneralLog.txt", "a")
            self.logger.log(file, f"Exception occurred while reading loading the params.yaml file, {e}")
            file.close()
            raise e




    def get_data(self, config_path):
        """
        This method is used to read the .csv file and return a dataframe
        :param: config_path
        :return: dataframe
        """

        try:
            config = self.read_params(config_path)
            data_path = config["data_source"]["local_source"]
            df = pd.read_csv(data_path, sep=",", encoding="utf-8")
            file = open("Logs/GeneralLog.txt", "a")
            self.logger.log(file, "Successfully loaded the csv file")
            file.close()
            return df

        except Exception as e:
            file = open("Logs/GeneralLog.txt", "a")
            self.logger.log(file, f"Exception occurred while loading the csv file, {e}")
            file.close()
            raise e



if __name__ == "__main__":
    args = argparse.ArgumentParser()
    args.add_argument("--config", default="params.yaml")
    parsed_args = args.parse_args()
    getdata = GetData()
    getdata.get_data(config_path=parsed_args.config)

