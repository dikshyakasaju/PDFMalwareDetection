stages:
  # 1st stage
  load_data:
    cmd: python src/load_data.py --config=params.yaml
    deps:
    - src/get_data.py
    - src/load_data.py
    - src/logger.py
    - data_given/PDFMalware2022.csv
    outs:
    - data/raw/PDFMalware2022.csv

   # 2nd stage
  preprocess_data:
      cmd: python src/preprocess_data.py --config=params.yaml
      deps:
      - src/preprocess_data.py
      - src/preprocessing.py
      - src/get_data.py
      - src/logger.py
      - data/raw/PDFMalware2022.csv
      outs:
      - data/processed/preprocesssed_PDFMalware2022.csv

   # 3rd stage
  feature_selection:
      cmd: python src/feature_selection.py --config=params.yaml
      deps:
      - src/feature_selection.py
      - src/get_data.py
      - src/logger.py
      - data/processed/preprocesssed_PDFMalware2022.csv
      outs:
      - data/processed/PDFMalware2022_final.csv
  # 4th stage
  split_data:
    cmd: python src/split_data.py --config=params.yaml
    deps:
    - src/split_data.py
    - src/get_data.py
    - src/logger.py
    - data/processed/PDFMalware2022_final.csv
    outs:
    - data/processed/train_PDFMalware2022.csv
    - data/processed/test_PDFMalware2022.csv
#
#  train_and_evaluate:
#    cmd: python src/train_and_evaluate.py --config=params.yaml
#    deps:
#    - data/processed/train_winequality.csv
#    - data/processed/test_winequality.csv
#    - src/train_and_evaluate.py
#    params:
#    - estimators.ElasticNet.params.alpha
#    - estimators.ElasticNet.params.l1_ratio
#    metrics:
#    - report/scores.json:
#        cache: false
#    - report/params.json:
#        cache: false
#    outs:
#    - saved_models/model.joblib